{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\nconst DISABLED = \"disabled\";\nlet userInputTime;\nlet remainingTime;\nlet timerIntervalId;\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nconst elements = {\n    dateTextInput: document.querySelector(\"#datetime-picker\"),\n    startBtn: document.querySelector(\"button[data-start]\"),\n    days: document.querySelector(\"[data-days]\"),\n    hours: document.querySelector(\"[data-hours]\"),\n    minutes: document.querySelector(\"[data-minutes]\"),\n    seconds: document.querySelector(\"[data-seconds]\")\n}\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userInputTime = selectedDates[0].getTime();\n        if (userInputTime > new Date()) {\n            setElementActivity(elements.startBtn, true);\n            remainingTime = userInputTime - new Date();            \n        } else {\n            showAlert('Please choose a date in the future');            \n        }\n    }\n};\n\nfunction showAlert(messageText) {\n    iziToast.show({\n        title: 'â›”',\n        message: messageText,\n        messageColor: 'white',\n        backgroundColor: 'tomato',\n        timeout: 3000,\n        position: 'topCenter'\n    });\n}\n\nfunction setElementActivity(element, isTurningOn) {\n    if (isTurningOn) {\n        element.removeAttribute(DISABLED);\n    } else {\n        element.setAttribute(DISABLED, \"\");\n    }\n}\n\nfunction updateElementValue(element, value) {\n    element.textContent = String(value).padStart(2, '0');\n}\n\nfunction updateTimerView({ days, hours, minutes, seconds }) {\n    updateElementValue(elements.days, days);\n    updateElementValue(elements.hours, hours);\n    updateElementValue(elements.minutes, minutes);\n    updateElementValue(elements.seconds, seconds);\n}\n\nfunction stopTimer() {\n    clearInterval(timerIntervalId);    \n}\n\nconst updateTimer = () => {    \n    const time = convertMs(remainingTime);\n    updateTimerView(time);\n    remainingTime -= 1000;\n    if (remainingTime <= 0) {\n        stopTimer();\n        setElementActivity(elements.dateTextInput, true);\n    }\n}\n\n\nsetElementActivity(elements.startBtn, false);\nconst fp = flatpickr(elements.dateTextInput, options);\n\nconst onStartBtnClick = () => {\n    if (userInputTime > new Date()) {\n        timerIntervalId = setInterval(updateTimer, 1000);\n    } else {\n        showAlert('Choosen date is out, set another date in the future');\n    }    \n    setElementActivity(elements.startBtn, false);\n    setElementActivity(elements.dateTextInput, false);\n}\n\nelements.startBtn.addEventListener(\"click\", onStartBtnClick);\n\n"],"names":["DISABLED","userInputTime","remainingTime","timerIntervalId","convertMs","ms","days","hours","minutes","seconds","elements","options","selectedDates","setElementActivity","showAlert","messageText","iziToast","element","isTurningOn","updateElementValue","value","updateTimerView","stopTimer","updateTimer","time","flatpickr","onStartBtnClick"],"mappings":"+IAOA,MAAMA,EAAW,WACjB,IAAIC,EACAC,EACAC,EAEJ,SAASC,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,MAAMC,EAAW,CACb,cAAe,SAAS,cAAc,kBAAkB,EACxD,SAAU,SAAS,cAAc,oBAAoB,EACrD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CACpD,EAEMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBX,EAAgBW,EAAc,GAAG,QAAO,EACpCX,EAAgB,IAAI,MACpBY,EAAmBH,EAAS,SAAU,EAAI,EAC1CR,EAAgBD,EAAgB,IAAI,MAEpCa,EAAU,oCAAoC,CAErD,CACL,EAEA,SAASA,EAAUC,EAAa,CAC5BC,EAAS,KAAK,CACV,MAAO,IACP,QAASD,EACT,aAAc,QACd,gBAAiB,SACjB,QAAS,IACT,SAAU,WAClB,CAAK,CACL,CAEA,SAASF,EAAmBI,EAASC,EAAa,CAC1CA,EACAD,EAAQ,gBAAgBjB,CAAQ,EAEhCiB,EAAQ,aAAajB,EAAU,EAAE,CAEzC,CAEA,SAASmB,EAAmBF,EAASG,EAAO,CACxCH,EAAQ,YAAc,OAAOG,CAAK,EAAE,SAAS,EAAG,GAAG,CACvD,CAEA,SAASC,EAAgB,CAAE,KAAAf,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDU,EAAmBT,EAAS,KAAMJ,CAAI,EACtCa,EAAmBT,EAAS,MAAOH,CAAK,EACxCY,EAAmBT,EAAS,QAASF,CAAO,EAC5CW,EAAmBT,EAAS,QAASD,CAAO,CAChD,CAEA,SAASa,GAAY,CACjB,cAAcnB,CAAe,CACjC,CAEA,MAAMoB,EAAc,IAAM,CACtB,MAAMC,EAAOpB,EAAUF,CAAa,EACpCmB,EAAgBG,CAAI,EACpBtB,GAAiB,IACbA,GAAiB,IACjBoB,IACAT,EAAmBH,EAAS,cAAe,EAAI,EAEvD,EAGAG,EAAmBH,EAAS,SAAU,EAAK,EAChCe,EAAUf,EAAS,cAAeC,CAAO,EAEpD,MAAMe,EAAkB,IAAM,CACtBzB,EAAgB,IAAI,KACpBE,EAAkB,YAAYoB,EAAa,GAAI,EAE/CT,EAAU,qDAAqD,EAEnED,EAAmBH,EAAS,SAAU,EAAK,EAC3CG,EAAmBH,EAAS,cAAe,EAAK,CACpD,EAEAA,EAAS,SAAS,iBAAiB,QAASgB,CAAe"}